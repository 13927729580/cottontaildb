package org.vitrivr.cottontail.execution.operators.predicates

import org.vitrivr.cottontail.database.entity.Entity
import org.vitrivr.cottontail.database.queries.components.BooleanPredicate
import org.vitrivr.cottontail.execution.ExecutionEngine
import org.vitrivr.cottontail.execution.operators.basics.Operator
import org.vitrivr.cottontail.execution.operators.basics.PipelineOperator
import org.vitrivr.cottontail.execution.operators.basics.ProducingOperator
import org.vitrivr.cottontail.model.basics.ColumnDef
import org.vitrivr.cottontail.model.basics.Record

/**
 * Filters the input generated by the parent [Operator] using the given [BooleanPredicate].
 *
 * This is a [Operator.PipelineOperator].
 *
 * @author Ralph Gasser
 * @version 1.0
 */
class FilterOperator(parent: ProducingOperator, context: ExecutionEngine.ExecutionContext, private val predicate: BooleanPredicate) : PipelineOperator(parent, context) {
    /** The maximum tuple ID held by the [Entity]. */
    override val columns: Array<ColumnDef<*>> = this.parent.columns

    override fun getNext(input: Record?): Record? = when {
        input == null -> input
        this.predicate.matches(input) -> input
        else -> null
    }
}